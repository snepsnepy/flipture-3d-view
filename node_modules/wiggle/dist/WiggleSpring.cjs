"use strict";Object.defineProperty(exports,Symbol.toStringTag,{value:"Module"});const f=require("three");/**
 *  @license
 *  Copyright 2017 Adam Miskiewicz
 *
 *  Use of this source code is governed by a MIT-style license that can be found
 *  in the LICENSE file or at https://opensource.org/licenses/MIT.
 */function A(_,t){if(!_)throw new Error(t)}function l(_,t){return typeof _<"u"&&_!==null?_:t}/**
 *  @license
 *  Copyright 2017 Adam Miskiewicz
 *
 *  Use of this source code is governed by a MIT-style license that can be found
 *  in the LICENSE file or at https://opensource.org/licenses/MIT.
 */const M=class M{constructor(t={}){this._listeners=[],this._currentAnimationStep=0,this._currentTime=0,this._springTime=0,this._currentValue=0,this._currentVelocity=0,this._isAnimating=!1,this._oscillationVelocityPairs=[],this._config={fromValue:l(t.fromValue,0),toValue:l(t.toValue,1),stiffness:l(t.stiffness,100),damping:l(t.damping,10),mass:l(t.mass,1),initialVelocity:l(t.initialVelocity,0),overshootClamping:l(t.overshootClamping,!1),allowsOverdamping:l(t.allowsOverdamping,!1),restVelocityThreshold:l(t.restVelocityThreshold,.001),restDisplacementThreshold:l(t.restDisplacementThreshold,1e-4),maxVelocity:l(t.maxVelocity,1/0)},this._currentValue=this._config.fromValue,this._currentVelocity=this._config.initialVelocity}start(){const{fromValue:t,toValue:i,initialVelocity:e}=this._config;return(t!==i||e!==0)&&(this._reset(),this._isAnimating=!0),this}stop(){return this._isAnimating?(this._isAnimating=!1,this._notifyListeners("onStop"),this._currentAnimationStep&&(cancelAnimationFrame(this._currentAnimationStep),this._currentAnimationStep=0),this):this}get currentValue(){return this._currentValue}get currentVelocity(){return this._currentVelocity}get isAtRest(){return this._isSpringAtRest()}get isAnimating(){return this._isAnimating}updateConfig(t){this._advanceSpringToTime(Date.now());const i={fromValue:this._currentValue,initialVelocity:this._currentVelocity};return this._config={...this._config,...i,...t},this._reset(),this}onStart(t){return this._listeners.push({onStart:t}),this}onUpdate(t){return this._listeners.push({onUpdate:t}),this}onStop(t){return this._listeners.push({onStop:t}),this}removeListener(t){return this._listeners=this._listeners.reduce((i,e)=>(Object.values(e).indexOf(t)!==-1||i.push(e),i),[]),this}removeAllListeners(){return this._listeners=[],this}_reset(){this._currentTime=Date.now(),this._springTime=0,this._currentValue=this._config.fromValue,this._currentVelocity=this._config.initialVelocity}_notifyListeners(t){this._listeners.forEach(i=>{const e=i[t];typeof e=="function"&&e(this)})}_step(t){this._advanceSpringToTime(t,!0)}_advanceSpringToTime(t,i=!1){if(!this._isAnimating)return;let e=t-this._currentTime;e>M.MAX_DELTA_TIME_MS&&(e=M.MAX_DELTA_TIME_MS),this._springTime+=e;const h=this._config.damping,u=this._config.mass,d=this._config.stiffness,x=this._config.fromValue,V=this._config.toValue,g=-this._config.initialVelocity,S=this._config.maxVelocity;A(u>0,"Mass value must be greater than 0"),A(d>0,"Stiffness value must be greater than 0");let s=h/(2*Math.sqrt(d*u));const r=Math.sqrt(d/u)/1e3,p=r*Math.sqrt(1-s*s),a=r*Math.sqrt(s*s-1),o=V-x;s>1&&!this._config.allowsOverdamping&&(s=1);let T=0,m=0;const n=this._springTime;if(s<1){const c=Math.exp(-s*r*n);T=V-c*((g+s*r*o)/p*Math.sin(p*n)+o*Math.cos(p*n)),m=s*r*c*(Math.sin(p*n)*(g+s*r*o)/p+o*Math.cos(p*n))-c*(Math.cos(p*n)*(g+s*r*o)-p*o*Math.sin(p*n))}else if(s===1){const c=Math.exp(-r*n);T=V-c*(o+(g+r*o)*n),m=c*(g*(n*r-1)+n*o*(r*r))}else{const c=Math.exp(-s*r*n);T=V-c*((g+s*r*o)*Math.sinh(a*n)+a*o*Math.cosh(a*n))/a,m=c*s*r*(Math.sinh(a*n)*(g+s*r*o)+o*a*Math.cosh(a*n))/a-c*(a*Math.cosh(a*n)*(g+s*r*o)+a*a*o*Math.sinh(a*n))/a}if(m=Math.max(-S,Math.min(S,m)),this._currentTime=t,this._currentValue=T,this._currentVelocity=m,!!i&&(this._notifyListeners("onUpdate"),!!this._isAnimating&&(this._isSpringOvershooting()||this._isSpringAtRest()))){d!==0&&(this._currentValue=V,this._currentVelocity=0,this._notifyListeners("onUpdate")),this.stop();return}}_isSpringOvershooting(){const{stiffness:t,fromValue:i,toValue:e,overshootClamping:h}=this._config;let u=!1;return h&&t!==0&&(i<e?u=this._currentValue>e:u=this._currentValue<e),u}_isSpringAtRest(){const{stiffness:t,toValue:i,restDisplacementThreshold:e,restVelocityThreshold:h}=this._config,u=Math.abs(this._currentVelocity)<=h;return t!==0&&Math.abs(i-this._currentValue)<=e&&u}};M.MAX_DELTA_TIME_MS=1/60*1e3*4;let y=M;const H={stiffness:500,damping:17},w=new f.Vector3,W=new f.Vector3,v=new f.Mesh(new f.SphereGeometry(.03),new f.MeshBasicMaterial({transparent:!0}));class L{constructor(t,i={}){this.options={...H,...i};const e=t.clone();t.parent.add(e),e.add(t),this.target=t,this.targetHelper=v.clone(),i.scene&&i.scene.add(this.targetHelper),this.currentHelper=v.clone(),i.scene&&i.scene.add(this.currentHelper),this.currentHelper.add(v.clone()),this.currentHelper.children[0].position.y=-.1,this._isFirstStep=!0;const h={stiffness:this.options.stiffness,damping:this.options.damping};this.springX=new y({fromValue:0,toValue:0,...h}),this.springY=new y({fromValue:0,toValue:0,...h}),this.springZ=new y({fromValue:0,toValue:0,...h}),this.originPosition=t.position.clone(),this.originRotation=t.rotation.clone(),this.oldBoneWorldPosition=new f.Vector3,this.oldBoneWorldRotation=new f.Quaternion,this.target.getWorldPosition(this.oldBoneWorldPosition),this.target.getWorldQuaternion(this.oldBoneWorldRotation),this.restLength=this.target.parent.position.length(),this.reset()}reset(){this._isFirstStep=!0,this.target.position.copy(this.originPosition),this.target.rotation.copy(this.originRotation),this.target.updateMatrixWorld(!0,!1),this.target.getWorldPosition(this.oldBoneWorldPosition)}dispose(){this.reset();const t=this.target.parent,i=t.parent;i.remove(t),i.add(this.target)}update(t=null){if(!t)if(this.ms){const e=performance.now();t=e-this.ms,t/=1e3,this.ms=e}else this.ms=performance.now(),t=16/1e3;let i=1;if(t=Math.min(t,100),t>.01&&(i=2),t>=100&&(i=25),!(t<.006))for(let e=0;e<i;e++)this.step(.0085*100)}step(t){this.target.parent.updateMatrixWorld(!0,!1),this.targetHelper.position.copy(this.originPosition),this.target.parent.localToWorld(this.targetHelper.position),this._isFirstStep&&(this._isFirstStep=!1,this.springX.updateConfig({fromValue:this.targetHelper.position.x}),this.springY.updateConfig({fromValue:this.targetHelper.position.y}),this.springZ.updateConfig({fromValue:this.targetHelper.position.z})),this.springX.updateConfig({toValue:this.targetHelper.position.x}).start(),this.springY.updateConfig({toValue:this.targetHelper.position.y}).start(),this.springZ.updateConfig({toValue:this.targetHelper.position.z}).start();const i=Date.now();this.springX._step(i),this.springY._step(i),this.springZ._step(i),this.target.position.set(this.springX.currentValue,this.springY.currentValue,this.springZ.currentValue),this.target.parent.worldToLocal(this.target.position),this.oldBoneWorldPosition.copy(w);const e=this.target.parent.getWorldPosition(W);this.currentHelper.position.copy(w),this.currentHelper.updateMatrixWorld(!0,!1),this.currentHelper.lookAt(e);const h=this.target.position.clone();h.normalize(),this.target.up.set(0,1,0),this.target.quaternion.setFromUnitVectors(this.target.up,h),this.target.position.set(0,0,0),this.target.updateMatrix()}}exports.WiggleBone=L;
